;*****************************************************************************;	FREQUENCY MODULATION INSTRUMENT N. 31;		TYPE 1 : COMPLETE INSTRUMENT MONO (BALANCE MODULE WITH SINE);-----------------------------------------------------------------------------;                      NEW VERSION VALID FROM CHROMA2001;-----------------------------------------------------------------------------; SIMPLIFIED PERCEPTUAL COMPENSATION: SINCE THE COMPUTATION IS FLOATING POINT;    NO NEED TO REDUCE THE AMPLITUDES IF MAXIMUM IS > 1 AFTER THE COMPENSATION; ALSO NO MODIFICATION OF THE GLOBAL AMPLITUDE TO A RELATIVE AMPLITUDE;-----------------------------------------------------------------------------;	p1	instrument number [31];	p2	action time [sec];	p3	duration [sec];	p4	global amplitude (0:1);	p5	reference frequency (f0) [Hz];  (p6)	stereo pan   ( 0 = left / 1 = right );	p7	carrier frequency factor (N1);	p8	modulation frequency factor (N2);	p9	minimum index;	p10	maximum index;	p11	function number for index envelope;	p12	jitter amplitude, with internal perceptual compensation [0:1];	p13	tremolo amplitude [0:1];	p14	tremolo frequency [Hz];	p15	attack duration [sec];	p16	decay duration [sec], with internal readjustment if needed;	p17 function number for amplitude envelope;	p18	balance freq.jitter/vibrato [1 = jitter / 0 = vibrato];	p19	vibrato frequency [Hz];	p20	frequency deviation [semitones];	p21	function number for frequency envelope;	p22	lower interval for portamento [semitones];	p23	upper interval for portamento [semitones];	p24	function number for portamento envelope;	p25	portamento duration [sec];	p26	modulation freq. affected by portamento ? (0 = no; 1 = yes);       if 0, gliss will have a spectral effect (sweep);       if 1, gliss will sound like a real gliss + spectral sweep;-----------------------------------------------------------------------------; KONTROL KEYWORDS FOR CHROMA2001 (CTL1);  GLOBAL KEYWORDS:;	ACTION-TIME	: start time of the whole event (0.0);	DURTOT		: total duration of the event (longer components are;                    automatically clipped) (1.0);	AMPTOT		: amplitude scaler (1.0);	NUMROWS		: amount of rows (components) in the event (1);	F0			: fundamental frequency for the event [Hz] (110.0);	N2			: N2 for all the components (1.0);  LOCAL KEYWORDS:;  GENERAL;   E-DELS	:	entry delays [sec] (0.0);	DURS	:	duration [0-1, scaler of DURTOT] (1.0);	AMP		:	amplitude [0-1, scaler of AMPTOT] (1.0);	FREQ	:	fundamental frequency for the event [Hz] (110.0);	BAL		:	panpot [0=left, 1=right] (STEREO VERSION ONLY) (0.5);	N1		:	N1, tuned to the closest integer value to the frequency [Hz];                  of the formant (in this field give the frequency);	N2		:	N2 for all the components (1.0);  INDEX;	IMIN	:	minimum index (1.0);	IMAX	:	maximum index (3.0);	IENV	:	index envelope [GEN];  AMPLITUDE ENVELOPE;	ATK		:	attack time [sec] (0.01);	DEC		:	decay time [sec] (0.05);	AENV	:	amplitude envelope [GEN];  AMPLITUDE MODULATION;	JTA		:	jitter amplitude [0-1, % of amplitude + compensation] (0.0);	TRA		:	tremolo amplitude [0-1, % of amplitude] (0.0);	TRF		:	tremolo frequency [Hz] (5.0);  FREQUENCY MODULATION;	JTV		:	vibrato/jitter panpot [0 = all vibrato, 1 = all jitter] (0.5);	VFQ		:	vibrato frequency [Hz] (6.0);	FDEV	:	frequency deviation [semitones] (0.0);	FENV	:	frequency envelope [GEN];  PORTAMENTO;	PLOW	:	lowest (minimum) portamento amplitude [semitones] (0.0);	PUP		:	upper (maximum) portamento amplitude [semitones] (0.0);	PENV	:	portamento envelope [GEN];	PDUR	:	portamento duration [sec[ (0.1);	PFLG	:	portamento flag [see above] (1);  SUB-COMPONENTS;	NPART	:	number of sub-components (0);	STON	:	aleatoric frequency distribution for each sub-component (0.06);				POSITIVE = distribution is linear;				NEGATIVE = distribution is logarithmic;	STON2	:	aleatoric frequency distribution around the value of N2 (0.01);				POSITIVE = distribution is linear;				NEGATIVE = distribution is logarithmic;	ED2		:	entry delay of each sub-compoment [sec] (0.01);				   (cumulative effect);	DUR2	:	duration of each sub-component [0-1, nil = use the duration;				  of the main component] (1.0);	AMP2	:	amplitude of each sub-component [0-1, nil = use the amplitude;				  of the main component] (1.0);-----------------------------------------------------------------------------; COMPULSORY FUNCTIONS :;	f1	audio sine wave;	f2	vibrato (sine wave);	f3	tremolo (sine wave); FUNCTIONS USED BY OTHER INSTRUMENTS;   f4	function for janusing;	f5	large non-interpolating sine for the FOF; OTHER USEFUL FUNCTIONS (CHROMA2001);   f6	constant 1;   f7	constant 0;   f8	ascending line (0->1) for reading into a table;   f9	simple triangle (0-1-0) for default envelopes;************************************************************************; Globals	sr     = 44100		;These values read	kr     = 44100		;in the	ksmps  = 1			;file	nchnls = 1			;header.orc	giramp = 1.0 / 3.0	; Some constants for a good jitter	girfq1 = 22.071		; from a model described in Chant	girfq2 = 8.749	girfq3 = 1.007	gimxamp= 32767	gipi	= 3.14159265	gipi2	= (gipi * 0.5)	gibal  = 2.13		; Factor to balance rms of jit/vib(trem)						; (See below)instr 31			; Initialization				; --------------		idur	  =		p3		idurosc   = 	1.0 / p3		igbamp	  =		p4		if0	 	  =     p5		ifroct	  =     octcps( p5 )		ibal	  =     p6		icar	  =		p7 * p5      ; actual carrier frequency		imod	  =		p8 * p5	     ;   "   modulation   "		kfrqn2	init	p8		imin	  =		p9		imax	  =		p10		idev	  =		imax - imin		ienv	  =		p11		iajit	  =		p12 * gibal		iatrm	  =		p13		itrfq	  =		p14		iatt	  =		p15		idec	  =		p16		iaenv	  =		p17		ivibfq	  =		p19		ifenv	  =		p21		ipenv	  =		p24		iprtdur	  =		p25		iflg	  =		p26		; change freq deviation and portamento into octave representation (1 = octave)		ifdev	  =  	p20 / 12		iprtlow	  =		p22 / 12		iprtup	  =		p23		iprtdev	  =		(iprtup - p22) / 12; default signal functions		isigfun	  =  	1		ivibfun	  =  	2		itrmfun	  =  	3; INITIALIZATION TESTS; constrain jitvib between 0 and 1 and assign frequency jitter and vibrato amplitudes		ijtvib	  = 	(p18 < 0.0 ? 0.0 : p18)		ifjit	  = 	ifdev * ijtvib		ifvib	  =		ifdev * (1.0 - ijtvib)	; constrain iprtdur to be more than 0		iprtdur	  = 	(iprtdur <= 0.0 ? 0.01 : iprtdur); if bal not between 0 and 1, set to 0 and 1		ibal	  =	( ibal < 0.0 ? 0.0 : ibal )		ibal	  =	( ibal > 1.0 ? 1.0 : ibal ); if att < 0, set it to 0		iatt	  =	( iatt < 0.0 ? 0.0 : iatt ); if dec < 0, set it to 0		idec	  =	( idec < 0.0 ? 0.0 : idec ); values OK, check other things; if att+dec > dur, reajust dec, but keep att the same		idec	  =	( iatt + idec <= idur ? idec : idur-iatt ); if att >= dur, put, by default, att = dec = 1/2*dur (no undesirable clicks)		iatt	  =		( idec >= 0 ? iatt : idur/2)		idec	  =		( idec >= 0 ? idec : idur/2 )				;--- Amplitude ---				;    ---------	; Jitter module		kaj1	randi	giramp,girfq1,-1		kaj2	randi	giramp,girfq2,-1		kaj3	randi	giramp,girfq3,-1		kajit     =	(kaj1 + kaj2 + kaj3) * iajit	; Tremolo module		katrm	oscili	iatrm,itrfq,itrmfun	; Amplitude modulation		kamod	  =	(kajit + katrm + igbamp) * gimxamp	; Amplitude envelope		kaenv   oscili 	kamod,idurosc,iaenv	; Global amplitude envelope		kamp 	linen 	kaenv,iatt,idur,idec   			   ;--- Carrier Frequency ---			   ;    -----------------	; Jitter module		kfj1	randi	giramp,girfq1,-1		kfj2	randi	giramp,girfq2,-1		kfj3	randi	giramp,girfq3,-1		kfjit     =	(kfj1 + kfj2 + kfj3) * ifjit	; Vibrato module		kfvib	oscili	ifvib,ivibfq,ivibfun	; Frequency "modulation"		kfmod	  =	kfjit + kfvib	; Frequency envelope		kfenv1  oscili 	kfmod,idurosc,ifenv			; Portato module		kfprt1	oscil1i	0,iprtdev,iprtdur,ipenv		kfprt	= kfprt1 + iprtlow	; Global frequency 					; modulation affects total frequency					; but foscili wants ratio only		kfrqn1	  =	icar / (cpsoct ( ifroct - kfenv1 - kfprt1 ))				; Modulation Frequency				; ---------- ---------		if  iflg  =  0	goto nomod	; if flag=0 no portato									; applied to mod. freq.	; Portato module		kfprt2	oscil1i	0,iprtdev,iprtdur,ipenv	; or 	kfprt2 	   = 	kfprt1 * (imod / icar)	; Global Frequency		kfrqn2	  =	imod / (cpsoct ( ifroct - kfprt2 ))nomod:			         ;--- Index --- 			         ;    -----	; Envelope Index		kndxa	oscili  idev,idurosc,ienv		kndx	  =	kndxa + imin		        ;--- Main oscillator / panning ---			    ;    ---------------   -------		asig	foscili	kamp,if0,kfrqn1,kfrqn2,kndx,isigfun				out			asigendin