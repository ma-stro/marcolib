;******************************************************************;		     CLASS FOF1m-ROOT; 	      Root class for the class FOF1M;            (big mono FOF with one f0 per FOF);******************************************************************(in-package om); LISP-DEFINED CLASSES SHOULD RESIDE IN THE LIBRARY'S PACKAGE AND ;   NOT IN THE USER PACKAGE, WHICH CONTAINS ALL THE CLASSES;   GRAPHICALLY DEFINED(defclass! fof1m-root  (cs-evt)  (   ( source-code :initform                 (load-buffer-textfile                  (get-orc-source (get-orc "FOF1m" cr::MSorc) )                  'textfile "append")                 :allocation :class                 :type textfile                 :accessor source-code)   ( numchan :initform (or (get-orc-channels (get-orc "FOF1m" cr::MSorc)) 1)            :allocation :class  :accessor numchan)   ( globals-list :initform                   (get-orc-globals                   (get-orc "FOF1m" cr::MSorc))                  :allocation :class                  :type list                  :accessor globals-list)   ( amp	:type number		:initarg :amp   		:initform 500.00		:accessor amp)   ( jta	:type number        	:initarg :jta         	:initform 0.0        	:accessor jta)   ( tra	:type number		:initarg :tra   		:initform 0.0		:accessor tra)   ( trf	:type number		:initarg :trf   		:initform 6.0		:accessor trf)    ( atk	:type number		:initarg :atk   		:initform 0.0		:accessor atk)   ( dec	:type number		:initarg :dec   		:initform 0.0		:accessor dec)   ( aenv	:type cs-table		:initarg :aenv                              ; x-pts y-pts decimals number size  		:initform (make-cs-table  'Gen07  '(0 256 512) '(0 1 0) 1 "?" 513)		:accessor aenv)  ;p11   ( bal	:type number		:initarg :bal   		:initform 0.5		:accessor bal)   ( f0	        :type number                :initarg :f0   		:initform 100.0		:accessor f0)   ( f0ev	:type cs-table		:initarg :f0ev                              ; x-pts y-pts decimals number size  		:initform (make-cs-table  'Gen07  '(0 512) '(0 0) 1 "?" 513)		:accessor f0ev)   ( f0jt       :type number                :initarg :f0jt   		:initform 0.0		:accessor f0jt)   ( f0va       :type number                :initarg :f0va   		:initform 0.0		:accessor f0va)   ( f0vf       :type number                :initarg :f0vf   		:initform 6.0		:accessor f0vf)   ( f0mev	:type cs-table		:initarg :f0mev                              ; x-pts y-pts decimals number size  		:initform (make-cs-table  'Gen07  '(0 512) '(0 0) 1 "?" 513)		:accessor f0mev)  ;p18   ( freq       :type number                :initarg :freq   		:initform 500.0		:accessor freq)   ( fqa	:type number                :initarg :fqa   		:initform 0.0		:accessor fqa)   ( fqev	:type cs-table		:initarg :fqev                              ; x-pts y-pts decimals number size  		:initform (make-cs-table  'Gen07  '(0 512) '(0 0) 1 "?" 513)		:accessor fqev)   ( fqjt	:type number                :initarg :fqjt   		:initform 0.0		:accessor fqjt)   ( fqjev	:type cs-table		:initarg :fqjev                              ; x-pts y-pts decimals number size  		:initform (make-cs-table  'Gen07  '(0 512) '(0 0) 1 "?" 513)		:accessor fqjev)   ( fqna	:type number                :initarg :fqna   		:initform 0.0		:accessor fqna)   ( fqnev	:type cs-table		:initarg :fqnev                              ; x-pts y-pts decimals number size  		:initform (make-cs-table  'Gen07  '(0 512) '(0 0) 1 "?" 513)		:accessor fqnev)  ;p25   ( bw         :type number                :initarg :bw   		:initform 50.0		:accessor bw)   ( bwa        :type number                :initarg :bwa   		:initform 0.0		:accessor bwa)   ( bwjt       :type number                :initarg :bwjt  		:initform 0.0		:accessor bwjt)   ( bwev	:type cs-table		:initarg :bwev                              ; x-pts y-pts decimals number size  		:initform (make-cs-table  'Gen07  '(0 512) '(0 0) 1 "?" 513)		:accessor bwev)  ;p29   ( oct        :type number                :initarg :oct   		:initform 0.0		:accessor oct)   ( oca        :type number                :initarg :oca   		:initform 0.0		:accessor oca)   ( ocjt       :type number                :initarg :ocjt  		:initform 0.0		:accessor ocjt)   ( ocev	:type cs-table		:initarg :ocev                              ; x-pts y-pts decimals number size  		:initform (make-cs-table  'Gen07  '(0 512) '(0 0) 1 "?" 513)		:accessor ocev)  ;p33   ( tex        :type number                :initarg :tex   		:initform 0.003		:accessor tex)   ( dbt        :type number                :initarg :dbt   		:initform 0.02		:accessor dbt)   ( atn        :type number                :initarg :atn   		:initform 0.007		:accessor atn)  ;36   ( ovlp       :type number                :initarg :ovlp   		:initform 100		:accessor ovlp)   ( mode       :type number                :initarg :mode   		:initform 0		:accessor mode)   ( nf        :type number                :initarg :nf   		:initform 677.4		:accessor nf))  (:documentation   ";-----------------------------------------------------------------------------;                          COMPLETE FOF - MONO; INSTRUMENT N. 42; ALMOST COMPATIBLE WITH A SIMILAR MSP PATCH CONTROLLED VIA OSC; IT WILL BE CALLED FOF1M/A-ROOT;-----------------------------------------------------------------------------;	p1	instrument number [41];	p2	action time [sec];	p3	duration [sec]; amplitude;	p4	global amplitude [0:1000];	p5	jitter amplitude, with internal perceptual compensation [0:1];	p6	tremolo amplitude [0:1];	p7	tremolo frequency [Hz];	p8	attack duration [sec];	p9	decay duration [sec], with internal readjustment if needed;	p10 	function number for amplitude envelope;	p11	stereo pan    [0 = left / 1 = right]; f0;	p12	fundamental frequency [Hz];	p13	fundamental frequency as a bpf (added to p12, normally use either one);		   use absolute values with p12 = 0;	p14	jitter amplitude for f0 [0:1 *f0];	p15	amplitude of f0 vibrato [0:1 *f0];	p16	frequency of f0 vibrato [Hz];	p17	function number for vibrato and jitter together; freq;	p18	formant frequency [Hz];	p19	maximum amplitude for freq deviation [Hz, starting at freq];	p20	function number for freq deviation;	p21	jitter amplitude for freq [0:1 *freq];	p22	function number for jitter;	p23	amplitude of band-limited noise for freq [0:1 *freq];	p24	function number for band-limited noise; bw; (big amplitude changes if BW varies too much, not very effective);	p25	bandwidth [Hz];	p26	maximum amplitude for BW deviation [Hz, starting at BW];	p27	jitter amplitude for bandwidth [0:1 *bandwidth];	p28	function number for jitter; octaviation;	p29	octaviation factor (0.0 = all the partials);	p30	maximum amplitude for octaviation deviation [starting at oct];	p31	jitter amplitude for octaviation [0:1 *oct];	p32	function number for octaviation; other pars for the fof;	p33	tex;	p34	debatt (= p34+atten);	p35	atten; mixed;	p36	ioverlaps for each FOF;	p37	fof mode (0 = no gliss within cycles);	p38	frequency of fast randi for formant frequency noise [Hz];	p39	amplitude scaler for noise above;-----------------------------------------------------------------------------;-----------------------------------------------------------------------------; COMPULSORY FUNCTIONS (LOADED BY THE CLASS):;	f2	vibrato (sine wave);	f3	tremolo (sine wave);	f5	large non-interpolating sine for the FOF;	f6	half sine from -pi/2 to pi/2; OTHER FUNCTIONS, NOT LOADED AUTOMATICALLY; FUNCTIONS USED BY OTHER INSTRUMENTS;	f1	audio sine wave;   	f4	function for janusing; OTHER USEFUL FUNCTIONS (CHROMA2001);   	f7	constant 1;   	f8	constant 0;	f9	straight line for reading into a table;   	f10	triangle line from 0 to 1 to 0;   STRAIGHT LINES (NOT RESCALED);	f11	-1 ->  0;	f12	 1 ->  0;	f13	 0 ->  1;	f14	 0 ->  -1;-----------------------------------------------------------------------------;-----------------------------------------------------------------------------; KONTROL KEYWORDS FOR OMCHROMA2002 (CTL1);  GLOBAL KEYWORDS:;	ACTION-TIME	: start time of the whole event (0.0);	DURTOT		: total duration of the event (longer components are;                    		automatically clipped) (1.0);	AMPTOT		: amplitude scaler (1.0);	NUMROWS		: amount of rows (components) in the event (1);-----------------------------------------------------------------------------;  LOCAL KEYWORDS:;  GENERAL;   E-DELS	:	entry delays [sec] (0.0);	DURS	:	duration [0-1, scaler of DURTOT] (1.0);  AMPLITUDE;	AMP	:	amplitude [0-1000, scaler of AMPTOT] (500.0);	JTA	:	jitter amplitude [0-1, % of ampl + compensation] (0.0);	TRA	:	tremolo amplitude [0-1, % of amp] (0.0);	TRF	:	tremolo frequency [Hz] (5.0);	ATK	:	attack time [sec] (0.0);	DEC	:	decay time [sec] (0.0);	AEN	:	amplitude envelope [GEN] (triangle);	BAL	:	panpot [0=left, 1=right] (STEREO VERSION ONLY) (0.5);  FUNDAMENTAL FREQUENCY;	F0	:	fund frequency [Hz] (100.0);	F0EV	:	f0 as an absolute function [GEN] (straight line, 0);	F0JT	:	jitter amplitude [0-1] (0.0);	F0VA	:	vibrato amplitude [0-1] (0.0);	F0VF	:	vibrato frequency [Hz] (6.0);	F0MEV	:	function number for jitter and vibrato [GEN] (straight line, 0);  FORMANT FREQUENCY;	FREQ	:	formant frequency [Hz] (500.0);	FQA	:	frequency deviation starting at FQ [Hz] (0.0);	FQEV	:	function number for frequency deviation [GEN] (straight line, 0);	FQJT	:	jitter amplitude [0-1 * FQ] (0.0);	FQJEV	:	function number for jitter [GEN] (straight line, 0);	FQNA	:	noise amplitude [0-1 * FQ] (0.0);	FQNEV	:	function number for noise [GEN] (straight line, 0);  BANDWIDTH;	BW	:	bandwidth [Hz] (50.0);	BWA	:	frequency deviation starting at BW [Hz] (0.0);	BWJT	:	jitter amplitude [0-1 * BW (0.0);	BWEV	:	function number for bandwidth [GEN] (straight line, 0);  OCTAVIATION;	OCT	:	octaviation factor [free] (0.0);	OCA	:	deviation for the octaviation starting at OCT [Hz] (0.0);	OCJT	:	jitter amplitude [0-1 * OCT (0.0);	OCEV	:	function number for octaviation [GEN] (straight line, 0);  OTHER CONTROLS;	TEX	:	tex [sec] (0.003);	DBT	:	debatt [sec] (0.02);	ATN	:	atten [sec] (0.007);	OVLP	:	overlap factor (100);	MOD	:	fof mode (0);	NF	:	frequency of noise module 1 (677.4);-----------------------------------------------------------------------------;  SUB-COMPONENTS;	NPART	:	number of sub-components (0);	STON	:	aleatoric frequency distribution for each sub-component (0.0);				POSITIVE = distribution is linear;				NEGATIVE = distribution is logarithmic;	ED2	:	entry delay of each sub-compoment [sec] (0.01);				   (cumulative effect);	DUR2	:	duration of each sub-component [0-1, nil = use the duration;				  of the main component] (1.0);	AMP2	:	amplitude of each sub-component [0-1, nil = use the amplitude;				  of the main component] (1.0);************************************************************************   "   )  (:icon 615)  );******************************************************************;			SUB-CLASSES;******************************************************************; fof1m;------------------------------------------------------------------(defclass! fof1m  (fof1m-root)  (   ; GLOBAL SLOTS: THE METHOD BELOW TRANSFORMS THEM INTO GLOBAL SLOTS   ;    ATTENTION: A GLOBAL SLOT SHOULD NOT HAVE AN INITARG   ( durtot :type number            :initform 1.0            :accessor durtot)   ( amptot :type number            :initform 1.0            :accessor amptot)   ( npart :type number           :initarg :npart            :initform 0           :accessor npart)   ( ston :type number          :initarg :ston          :initform 0.06          :accessor ston)   ( ed2 :type number         :initarg :ed2         :initform 0.01         :accessor ed2)   ( dur2 :type number          :initarg :dur2          :initform -1          :accessor dur2)   ( amp2 :type number          :initarg :amp2          :initform -1          :accessor amp2))  (:documentation      "Extension of the instrument FOF1m, class fof1m-root.Added global slots:  durtot [sec] = total duration of the whole event  amptot [0-1] = global amplitude scalerAdded local slots:  npart [int] = number of sub-components  ston [0-1]  = maximum frequency deviation for the sub-components		positive = linear distribution (value in %)		negative = logarithmic distribution (value in semitones)  ed2 [sec]   = entry delay of each sub-component (cumulative effect)   dur2 [0-1]  = duration of each sub-component (scaler of DURTOT) (nil)                   (if nil, use the value of the main component)  amp2 [0-1]  = amplitude of each sub-component (scaler of AMPTOT) (nil)                   (if nil, use the value of the main component)")  (:icon 615)  );------------------------------------------------------------------;	METHODS FOR THIS CLASS;------------------------------------------------------------------; ADD SOME GLOBAL SLOTS (THE FIRST ONES ON THE LEFT OF A CLASS BOX);     THIS METHOD MUST BE DEFINED FOR THIS CLASS(defmethod get-slot-in-out-names ((self fof1m)); MEANING OF THE FIELDS:;   SLOT NAMES (THE FIRST 3 ARE THE DEFAULT ONES);   DEFAULT VALUES;   DOCUMENTATION;   T IF IT IS A MENU   (values '("self" "numrows" "action-time" "user-fun" "durtot" "amptot")           '(nil 1 0 nil 1.0 1.0)           '("object or object list"             "How many vertical components for init ?"             "local event offset (in seconds)"             "user-defined function"             "Total duration for the whole event [sec]"             "Global amplitude scaler [0-1]")           '(nil nil nil nil nil nil))); SPECIFY WHICH ARE THE GLOBAL SLOTS(defmethod fixed-slots-list ((x om::fof1m))  "Specifies the fixed (global) slots for this class"  '(numrows action-time user-fun durtot amptot)); ELIMINATE THE LAST 5 SLOTS IN THE INSTRUMENT (NOT NEEDED IN THE SCORE)(defmethod nullslots ((x om::fof1m))  "Eliminate the last 5 slots from the score"  5);------------------------------------------------------------------(defmethod! orc-header ((self fof1m-root))  (list   "; Marco's GEN functions *********************************************************"   "; FREQUENCY VIBRATO"   "f2  0   4097   9  1  1  0"   "; AMPLITUDE VIBRATO"   "f3  0   4097   9  1  1  0"   "; AUDIO SINE FOR THE FOF (NOT INTERPOLATING)"   "f5 0 65536 10 1"   "; HALF SINE FOR THE FOF"   "f6 0 32768 19 .5 .5 270 .5"   ))(defmethod! orc-header ((self fof1m))  (list   "; Marco's GEN functions *********************************************************"   "; FREQUENCY VIBRATO"   "f2  0   4097   9  1  1  0"   "; AMPLITUDE VIBRATO"   "f3  0   4097   9  1  1  0"   "; AUDIO SINE FOR THE FOF (NOT INTERPOLATING)"   "f5 0 65536 10 1"   "; HALF SINE FOR THE FOF"   "f6 0 32768 19 .5 .5 270 .5"   ));******************************************************************