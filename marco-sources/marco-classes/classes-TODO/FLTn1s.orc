;-----------------------------------------------------------------------------;             COMPLETE FILTER (XRESON) WITH NOISE / STEREO VERSION;-----------------------------------------------------------------------------;	p1	instrument number [61];	p2	action time [sec];	p3	duration [sec]; amplitude;	p4	global amplitude [0:1];	p5	jitter amplitude, with internal perceptual compensation [0:1];	p6	tremolo amplitude [0:1];	p7	tremolo frequency [Hz];	p8	attack duration [sec];	p9	decay duration [sec], with internal readjustment if needed;	p10 function number for amplitude envelope;   p11	stereo pan    [0 = left / 1 = right]; freq;	p12	formant frequency [Hz];	p13	maximum amplitude for freq deviation [Hz, starting at freq];	p14	function number for freq deviation;	p15	jitter amplitude for freq [0:1 *freq];	p16	function number for jitter;	p17	amplitude of band-limited noise for freq [0:1 *freq];	p18	function number for band-limited noise; bw; (big amplitude changes if BW varies too much, not very effective);	p19	bandwidth [Hz];	p20	maximum amplitude for BW deviation [Hz, starting at BW];	p21	jitter amplitude for bandwidth [0:1 *bandwidth];	p22	function number for jitter; other pars for the fof;	p23	inum;-----------------------------------------------------------------------------;-----------------------------------------------------------------------------; COMPULSORY AND RECOMMENDED FUNCTIONS :;	f1	audio sine wave;	f2	vibrato (sine wave);	f3	tremolo (sine wave); FUNCTIONS USED BY OTHER INSTRUMENTS;   f4	function for janusing;	f5	large non-interpolating sine for the FOF;	f6	half sine from -pi/2 to pi/2; OTHER USEFUL FUNCTIONS (CHROMA2001);   f7	constant 1;   f8	constant 0;   f9	ascending line (0->1) for reading into a table;   f10	simple triangle (0-1-0) for default envelopes;-----------------------------------------------------------------------------;-----------------------------------------------------------------------------; KONTROL KEYWORDS FOR OMCHROMA2002 (CTL1);  GLOBAL KEYWORDS:;	ACTION-TIME	: start time of the whole event (0.0);	DURTOT		: total duration of the event (longer components are;                    automatically clipped) (1.0);	AMPTOT		: amplitude scaler (1.0);	NUMROWS		: amount of rows (components) in the event (1);-----------------------------------------------------------------------------;  LOCAL KEYWORDS:;  GENERAL;   E-DELS	:	entry delays [sec] (0.0);	DURS	:	duration [0-1, scaler of DURTOT] (1.0);  AMPLITUDE;	AMP		:	amplitude [0-1, scaler of AMPTOT] (1.0);	JTA		:	jitter amplitude [0-1, % of ampl + compensation] (0.0);	TRA		:	tremolo amplitude [0-1, % of amp] (0.0);	TRF		:	tremolo frequency [Hz] (5.0);	ATK		:	attack time [sec] (0.01);	DEC		:	decay time [sec] (0.05);	AEV		:	amplitude envelope [GEN] (10);	BAL		:	panpot [0=left, 1=right] (STEREO VERSION ONLY) (0.5);  FORMANT FREQUENCY;	FREQ	:	formant frequency [Hz] (500.0);	FQA		:	frequency deviation starting at FQ [Hz] (500.0);	FQEV	:	function number for frequency deviation [GEN] (7);	FQJT	:	jitter amplitude [0-1 * FQ] (0.0);	FQJEV	:	function number for jitter [GEN] (7);	FQNA	:	noise amplitude [0-1 * FQ] (0.0);	FQNEV	:	function number for noise [GEN] (7);  BANDWIDTH;	BW		:	bandwidth [Hz] (50.0);	BWA		:	frequency deviation starting at BW [Hz] (100.0);	BWJT	:	jitter amplitude [0-1 * BW (0.0);	BWEV	:	function number for bandwidth [GEN] (7);  OTHER CONTROLS;	NUM		:	number of serially cascading filters (4);	NF		:	frequency of noise on formant frequency (754.1);-----------------------------------------------------------------------------;  SUB-COMPONENTS;	NPART	:	number of sub-components (0);	STON	:	aleatoric frequency distribution for each sub-component (0.0);				POSITIVE = distribution is linear;				NEGATIVE = distribution is logarithmic;	ED2		:	entry delay of each sub-compoment [sec] (0.01);				   (cumulative effect);	DUR2	:	duration of each sub-component [0-1, nil = use the duration;				  of the main component] (1.0);	AMP2	:	amplitude of each sub-component [0-1, nil = use the amplitude;				  of the main component] (1.0);************************************************************************	sr		= 44100	kr		= 44100	ksmps	= 1	nchnls 	= 2	givibfun	=	2	gitrmfun	=	3	; Some constants for a good jitter (from a model described in Chant)	giramp = 1.0 / 3.0		girfq1 = 20.134	girfq2 = 9.109	girfq3 = 0.821; used for the bandwidth	girfq21 = 24.134	girfq22 = 13.109	girfq23 = 1.821	gimxamp= 32767	gipi	= 3.14159265	gipi2	= (gipi * 0.5)	gibal  = 2.13		; Factor to balance rms of jit/vib(trem)						; (See below); *****************************************************************instr 52idur		=	p3idurosc		=	1/p3iamp		=	p4iajta		=	p5*gibaliatra		=	p6iatrf		=	p7iatt		=	p8idec		=	p9iaenv		=	p10ibal		=	p11 ; unused hereifq		=	p12ifqamp	=	p13ifqenv	=	p14ifqjta	=	p15*ifqifqjtev	=	p16ifqna	=	p17*ifqifqnev	=	p18ibw		=	p19ibwamp	=	p20ibwjta	=	p21*ibwibwenv	=	p22inum 	=	p23irfqnf	=	p24; INITIALIZATION TESTS; if bal not between 0 and 1, set to 0 and 1		ibal	  =	( ibal < 0.0 ? 0.0 : ibal )		ibal	  =	( ibal > 1.0 ? 1.0 : ibal ); if att < 0, set it to 0		iatt	  =	( iatt < 0.0 ? 0.0 : iatt ); if dec < 0, set it to 0		idec	  =	( idec < 0.0 ? 0.0 : idec ); values OK, check other things; if att+dec > dur, reajust dec, but keep att the same		idec	  =	( iatt + idec <= idur ? idec : idur-iatt ); if att >= dur, put, by default, att = dec = 1/2*dur (no undesirable clicks)		iatt	  =		( idec >= 0 ? iatt : idur/2)		idec	  =		( idec >= 0 ? idec : idur/2 )				;--- freq ---				;------------	; Jitter module + envelope		kfqj1	randi	giramp, girfq1, -1		kfqj2	randi	giramp, girfq2, -1		kfqj3	randi	giramp, girfq3, -1		kfqjit	=	(kfqj1 + kfqj2 + kfqj3) * ifqjta		kfqjt1	oscili	kfqjit, idurosc, ifqjtev	; Coloured noise module + envelope		kfqnf	randi	giramp, irfqnf, -1		kfqn1	=	kfqnf * ifqna		kfqn2   oscili	kfqn1, idurosc, ifqnev	; Frequency deviation and envelope		kfqev   oscili 	ifqamp, idurosc, ifqenv	; Global frequency 		kfq	  =	ifq + kfqev + kfqjit + kfqn2				;--- bandwidth ---				;-----------------	; Jitter module		kbwj1	randi	giramp, girfq21, -1		kbwj2	randi	giramp, girfq22, -1		kbwj3	randi	giramp, girfq23, -1		kbwjit     =	(kbwj1 + kbwj2 + kbwj3) * ibwjta			; Bandwidth deviation + envelope		kbwmod	oscili	ibwamp, idurosc, ibwenv	; Global bandwidth		kbw	  =	ibw + kbwmod + kbwjit				;--- Amplitude ---				;    ---------	; Jitter module		kaj1	randi	giramp,girfq1,-1		kaj2	randi	giramp,girfq2,-1		kaj3	randi	giramp,girfq3,-1		kajit     =	(kaj1 + kaj2 + kaj3) * iajta	; Tremolo module		katrm	oscili	iatra,iatrf,gitrmfun	; Amplitude modulation		kamod	  =	(kajit + katrm + iamp) * gimxamp	; Amplitude envelope		kaenv   oscili 	kamod,idurosc,iaenv	; Global amplitude envelope		kamp 	linen 	kaenv,iatt,idur,idec	; Noise source		a1		rand	kamp, -1   a2 resonx a1, kfq, kbw, inum, 1		arightamp	=	sin (ibal * gipi2)		aleftamp	=	sin ((1 - ibal) * gipi2)		al	  =	a2 * aleftamp		ar	  =	a2 * arightamp				outs		al,arendin