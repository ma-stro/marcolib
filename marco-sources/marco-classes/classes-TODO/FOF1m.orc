;-----------------------------------------------------------------------------;                          COMPLETE FOF - MONO; INSTRUMENT N. 42;-----------------------------------------------------------------------------;	p1	instrument number [41];	p2	action time [sec];	p3	duration [sec]; amplitude;	p4	global amplitude [0:1];	p5	jitter amplitude, with internal perceptual compensation [0:1];	p6	tremolo amplitude [0:1];	p7	tremolo frequency [Hz];	p8	attack duration [sec];	p9	decay duration [sec], with internal readjustment if needed;	p10 function number for amplitude envelope;	p11	stereo pan    [0 = left / 1 = right]; f0;	p12	fundamental frequency [Hz];	p13	fundamental frequency as a bpf (added to p12, normally use either one);		   use absolute values with p12 = 0;	p14	jitter amplitude for f0 [0:1 *f0];	p15	amplitude of f0 vibrato [0:1 *f0];	p16	frequency of f0 vibrato [Hz];	p17	function number for vibrato and jitter together; freq;	p18	formant frequency [Hz];	p19	maximum amplitude for freq deviation [Hz, starting at freq];	p20	function number for freq deviation;	p21	jitter amplitude for freq [0:1 *freq];	p22	function number for jitter;	p23	amplitude of band-limited noise for freq [0:1 *freq];	p24	function number for band-limited noise; bw; (big amplitude changes if BW varies too much, not very effective);	p25	bandwidth [Hz];	p26	maximum amplitude for BW deviation [Hz, starting at BW];	p27	jitter amplitude for bandwidth [0:1 *bandwidth];	p28	function number for jitter; octaviation;	p29	octaviation factor (0.0 = all the partials);	p30	maximum amplitude for octaviation deviation [starting at oct];	p31	jitter amplitude for octaviation [0:1 *oct];	p32	function number for octaviation; other pars for the fof;	p33	tex;	p34	debatt (= p34+atten);	p35	atten; mixed;	p36	ioverlaps for each FOF;	p37	fof mode (0 = no gliss within cycles);	p38	frequency of fast randi for formant frequency noise [Hz];	p39	amplitude scaler for noise above;-----------------------------------------------------------------------------;-----------------------------------------------------------------------------; COMPULSORY AND RECOMMENDED FUNCTIONS :;	f1	audio sine wave;	f2	vibrato (sine wave);	f3	tremolo (sine wave); FUNCTIONS USED BY OTHER INSTRUMENTS;   f4	function for janusing;	f5	large non-interpolating sine for the FOF;	f6	half sine from -pi/2 to pi/2; OTHER USEFUL FUNCTIONS (CHROMA2001);   f7	constant 1;   f8	constant 0;   f9	ascending line (0->1) for reading into a table;   f10	simple triangle (0-1-0) for default envelopes;-----------------------------------------------------------------------------;-----------------------------------------------------------------------------; KONTROL KEYWORDS FOR OMCHROMA2002 (CTL1);  GLOBAL KEYWORDS:;	ACTION-TIME	: start time of the whole event (0.0);	DURTOT		: total duration of the event (longer components are;                    automatically clipped) (1.0);	AMPTOT		: amplitude scaler (1.0);	NUMROWS		: amount of rows (components) in the event (1);-----------------------------------------------------------------------------;  LOCAL KEYWORDS:;  GENERAL;   E-DELS	:	entry delays [sec] (0.0);	DURS	:	duration [0-1, scaler of DURTOT] (1.0);  AMPLITUDE;	AMP		:	amplitude [0-1, scaler of AMPTOT] (1.0);	JTA		:	jitter amplitude [0-1, % of ampl + compensation] (0.0);	TRA		:	tremolo amplitude [0-1, % of amp] (0.0);	TRF		:	tremolo frequency [Hz] (5.0);	ATK		:	attack time [sec] (0.0);	DEC		:	decay time [sec] (0.0);	AEN		:	amplitude envelope [GEN] (triangle);	BAL		:	panpot [0=left, 1=right] (STEREO VERSION ONLY) (0.5);  FUNDAMENTAL FREQUENCY;	F0		:	fund frequency [Hz] (100.0);	F0EV	:	f0 as an absolute function [GEN] (straight line, 0);	F0JT	:	jitter amplitude [0-1] (0.0);	F0VA	:	vibrato amplitude [0-1] (0.0);	F0VF	:	vibrato frequency [Hz] (6.0);	F0MEV	:	function number for jitter and vibrato [GEN] (straight line, 0);  FORMANT FREQUENCY;	FREQ	:	formant frequency [Hz] (500.0);	FQA		:	frequency deviation starting at FQ [Hz] (0.0);	FQEV	:	function number for frequency deviation [GEN] (straight line, 0);	FQJT	:	jitter amplitude [0-1 * FQ] (0.0);	FQJEV	:	function number for jitter [GEN] (straight line, 0);	FQNA	:	noise amplitude [0-1 * FQ] (0.0);	FQNEV	:	function number for noise [GEN] (straight line, 0);  BANDWIDTH;	BW		:	bandwidth [Hz] (50.0);	BWA		:	frequency deviation starting at BW [Hz] (0.0);	BWJT	:	jitter amplitude [0-1 * BW (0.0);	BWEV	:	function number for bandwidth [GEN] (straight line, 0);  OCTAVIATION;	OCT		:	octaviation factor [free] (0.0);	OCA		:	deviation for the octaviation starting at OCT [Hz] (0.0);	OCJT	:	jitter amplitude [0-1 * OCT (0.0);	OCEV	:	function number for octaviation [GEN] (straight line, 0);  OTHER CONTROLS;	TEX		:	tex [sec] (0.003);	DBT		:	debatt [sec] (0.02);	ATN		:	atten [sec] (0.007);	OVLP	:	overlap factor (100);	MOD		:	fof mode (0);	NF		:	frequency of noise module 1 (677.4);-----------------------------------------------------------------------------;  SUB-COMPONENTS;	NPART	:	number of sub-components (0);	STON	:	aleatoric frequency distribution for each sub-component (0.0);				POSITIVE = distribution is linear;				NEGATIVE = distribution is logarithmic;	ED2		:	entry delay of each sub-compoment [sec] (0.01);				   (cumulative effect);	DUR2	:	duration of each sub-component [0-1, nil = use the duration;				  of the main component] (1.0);	AMP2	:	amplitude of each sub-component [0-1, nil = use the amplitude;				  of the main component] (1.0);************************************************************************	sr		= 44100	kr		= 44100	ksmps	= 1	nchnls 	= 1	givibfun	=	2	gitrmfun	=	3	gifna		= 	5	gifnb		=	6	; Some constants for a good jitter (from a model described in Chant)	giramp = 1.0 / 3.0		girfq1 = 20.134	girfq2 = 9.109	girfq3 = 0.821; used for the bandwidth	girfq21 = 24.134	girfq22 = 13.109	girfq23 = 1.821; used for octaviation	girfq31 = 18.134	girfq32 = 7.109	girfq33 = 0.677	gimxamp= 32767	gipi	= 3.14159265	gipi2	= (gipi * 0.5)	gibal  = 2.13		; Factor to balance rms of jit/vib(trem)						; (See below); *****************************************************************instr 41idur		=	p3idurosc		=	1/p3iamp		=	p4iajta		=	p5*gibaliatra		=	p6iatrf		=	p7iatt		=	p8idec		=	p9iaenv		=	p10ibal		=	p11 ; unused hereif0			=	 p12if0env		=	 p13if0jta		=	 p14*if0if0vamp		=	 p15*if0if0vfq		=	 p16if0modenv	=	 p17ifq		=	p18ifqamp	=	p19ifqenv	=	p20ifqjta	=	p21*ifqifqjtev	=	p22ifqna	=	p23*ifqifqnev	=	p24ibw		=	p25ibwamp	=	p26ibwjta	=	p27*ibwibwenv	=	p28ioct 	=	p29ioamp	=	p30iojta	=	p31*ioctioenv	=	p32itex	=	p33iatten	=	p35idebatt	=	p34+iatteniolps	=	p36ifmode	=	p37irfqnf	=	p38; INITIALIZATION TESTS; if bal not between 0 and 1, set to 0 and 1		ibal	  =	( ibal < 0.0 ? 0.0 : ibal )		ibal	  =	( ibal > 1.0 ? 1.0 : ibal ); if att < 0, set it to 0		iatt	  =	( iatt < 0.0 ? 0.0 : iatt ); if dec < 0, set it to 0		idec	  =	( idec < 0.0 ? 0.0 : idec ); values OK, check other things; if att+dec > dur, reajust dec, but keep att the same		idec	  =	( iatt + idec <= idur ? idec : idur-iatt ); if att >= dur, put, by default, att = dec = 1/2*dur (no undesirable clicks)		iatt	  =		( idec >= 0 ? iatt : idur/2)		idec	  =		( idec >= 0 ? idec : idur/2 )				;--- F0 ---				;----------	; Jitter module		kf0j1	randi	giramp, girfq1, -1		kf0j2	randi	giramp, girfq2, -1		kf0j3	randi	giramp, girfq3, -1		kf0jit     =	(kf0j1 + kf0j2 + kf0j3) * if0jta	; Vibrato module		kf0vib	oscili	if0vamp, if0vfq, givibfun	; Frequency "modulation"		kf0mod	  =	kf0jit + kf0vib	; Modulation envelope		kf0mod   oscili 	kf0mod, idurosc, if0modenv					; f0 envelope		kf0env   oscili 	1.0, idurosc, if0env			; Global frequency 		kf0	  =	if0 + kf0env + kf0mod				;--- freq ---				;------------	; Jitter module + envelope		kfqj1	randi	giramp, girfq1, -1		kfqj2	randi	giramp, girfq2, -1		kfqj3	randi	giramp, girfq3, -1		kfqjit	=	(kfqj1 + kfqj2 + kfqj3) * ifqjta		kfqjt1	oscili	kfqjit, idurosc, ifqjtev	; Coloured noise module + envelope		kfqnf	randi	giramp, irfqnf, -1		kfqn1	=	kfqnf * ifqna		kfqn2   oscili	kfqn1, idurosc, ifqnev	; Frequency deviation and envelope		kfqev   oscili 	ifqamp, idurosc, ifqenv	; Global frequency 		kfq	  =	ifq + kfqev + kfqjit + kfqn2				;--- bandwidth ---				;-----------------	; Jitter module		kbwj1	randi	giramp, girfq21, -1		kbwj2	randi	giramp, girfq22, -1		kbwj3	randi	giramp, girfq23, -1		kbwjit     =	(kbwj1 + kbwj2 + kbwj3) * ibwjta			; Bandwidth deviation + envelope		kbwmod	oscili	ibwamp, idurosc, ibwenv	; Global bandwidth		kbw	  =	ibw + kbwmod + kbwjit				;--- octaviation ---				;-------------------	; Jitter module		kioj1	randi	giramp, girfq31, -1		kioj2	randi	giramp, girfq32, -1		kioj3	randi	giramp, girfq33, -1		kiojit     =	(kioj1 + kioj2 + kioj3) * iojta	; Octaviation deviation and envelope		kiomod   oscili 	ioamp, idurosc, ioenv	; Global frequency 		kio	  =	kiomod + ioct + kiojit				;--- Amplitude ---				;    ---------	; Jitter module		kaj1	randi	giramp,girfq1,-1		kaj2	randi	giramp,girfq2,-1		kaj3	randi	giramp,girfq3,-1		kajit     =	(kaj1 + kaj2 + kaj3) * iajta	; Tremolo module		katrm	oscili	iatra,iatrf,gitrmfun	; Amplitude modulation		kamod	  =	(kajit + katrm + iamp) * gimxamp	; Amplitude envelope		kaenv   oscili 	kamod,idurosc,iaenv	; Global amplitude envelope		kamp 	linen 	kaenv,iatt,idur,idec   ;                              koct                                       ifna   ;          xamp  xfund  xform       kband  kris    kdur    kdec   iolaps        ifnb itotdur	iphs ifmode   a1 fof     kamp,  kf0,  kfq,   kio, kbw, itex, idebatt, iatten,  iolps, gifna, gifnb,  idur, 0.0, ifmode      out     a1endin