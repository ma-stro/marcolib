;******************************************************************;		   CLASS FLTn1m-ROOT; 	    Root class for the class FLTn1M;              (big mono XRESON FILTER);******************************************************************(in-package om); LISP-DEFINED CLASSES SHOULD RESIDE IN THE LIBRARY'S PACKAGE AND ;   NOT IN THE USER PACKAGE, WHICH CONTAINS ALL THE CLASSES;   GRAPHICALLY DEFINED(defclass! fltn1m-root  (cs-evt)  (   ( source-code :initform                 (load-buffer-textfile                  (get-orc-source (get-orc "FLTn1m" cr::MSorc) )                  'textfile "append")                 :allocation :class                 :type textfile                 :accessor source-code)   ( numchan :initform (or (get-orc-channels (get-orc "FLTn1m" cr::MSorc)) 1)            :allocation :class  :accessor numchan)   ( globals-list :initform                   (get-orc-globals                   (get-orc "FLTn1m" cr::MSorc))                  :allocation :class                  :type list                  :accessor globals-list)   ( amp	:type number		:initarg :amp   		:initform 0.5		:accessor amp)   ( jta	:type number        	:initarg :jta         	:initform 0.0        	:accessor jta)   ( tra	:type number		:initarg :tra   		:initform 0.0		:accessor tra)   ( trf	:type number		:initarg :trf   		:initform 6.0		:accessor trf)    ( atk	:type number		:initarg :atk   		:initform 0.0		:accessor atk)   ( dec	:type number		:initarg :dec   		:initform 0.0		:accessor dec)   ( aenv	:type cs-table		:initarg :aenv                                                  ; x-pts y-pts decimals number size  		:initform (make-cs-table  'Gen07  '(0 256 512) '(0 1 0) 1 "?" 513)		:accessor aenv)  ;p11   ( bal	:type number		:initarg :bal   		:initform 0.5		:accessor bal)   ( freq        :type number                :initarg :freq   		:initform 500.0		:accessor freq)   ( fqa	:type number                :initarg :fqa   		:initform 0.0		:accessor fqa)   ( fqev	:type cs-table		:initarg :fqev                                                  ; x-pts y-pts decimals number size  		:initform (make-cs-table  'Gen07  '(0 512) '(0 0) 1 "?" 513)		:accessor fqev)   ( fqjt	:type number                :initarg :fqjt   		:initform 0.0		:accessor fqjt)   ( fqjev	:type cs-table		:initarg :fqjev                                          ; x-pts y-pts decimals number size  		:initform (make-cs-table  'Gen07  '(0 512) '(0 0) 1 "?" 513)		:accessor fqjev)   ( fqna	:type number                :initarg :fqna   		:initform 0.0		:accessor fqna)   ( fqnev	:type cs-table		:initarg :fqnev                                          ; x-pts y-pts decimals number size  		:initform (make-cs-table  'Gen07  '(0 512) '(0 0) 1 "?" 513)		:accessor fqnev)  ;p19   ( bw         :type number                :initarg :bw   		:initform 50.0		:accessor bw)   ( bwa        :type number                :initarg :bwa   		:initform 0.0		:accessor bwa)   ( bwjt       :type number                :initarg :bwjt  		:initform 0.0		:accessor bwjt)   ( bwev	:type cs-table		:initarg :bwev                                          ; x-pts y-pts decimals number size  		:initform (make-cs-table  'Gen07  '(0 512) '(0 0) 1 "?" 513)		:accessor bwev)  ;p23   ( num        :type number                :initarg :num   		:initform 4		:accessor num)   ( nf        :type number                :initarg :nf   		:initform 754.1		:accessor nf))  (:documentation   ";-----------------------------------------------------------------------------;             COMPLETE FILTER (XRESON) WITH NOISE / STEREO VERSION; IT WILL BE CALLED FLTN1M/S.ORC;-----------------------------------------------------------------------------;	p1	instrument number [52];	p2	action time [sec];	p3	duration [sec]; amplitude;	p4	global amplitude [0:1000];	p5	jitter amplitude, with internal perceptual compensation [0:1];	p6	tremolo amplitude [0:1];	p7	tremolo frequency [Hz];	p8	attack duration [sec];	p9	decay duration [sec], with internal readjustment if needed;	p10 	function number for amplitude envelope; 	(p11)	stereo pan    [0 = left / 1 = right] (UNUSED HERE); freq;	p12	formant frequency [Hz];	p13	maximum amplitude for freq deviation [Hz, starting at freq];	p14	function number for freq deviation;	p15	jitter amplitude for freq [0:1 *freq];	p16	function number for jitter;	p17	amplitude of band-limited noise for freq [0:1 *freq];	p18	function number for band-limited noise; bw; (big amplitude changes if BW varies too much, not very effective);	p19	bandwidth [Hz];	p20	maximum amplitude for BW deviation [Hz, starting at BW];	p21	jitter amplitude for bandwidth [0:1 *bandwidth];	p22	function number for jitter; other pars for the instrument;	p23	inum (number of serially cascading filters);-----------------------------------------------------------------------------;-----------------------------------------------------------------------------; COMPULSORY AND RECOMMENDED FUNCTIONS :;	f2	vibrato (sine wave);	f3	tremolo (sine wave); FUNCTIONS USED BY OTHER INSTRUMENTS;	f1	audio sine wave;   	f4	function for janusing;	f5	large non-interpolating sine for the FOF;	f6	half sine from -pi/2 to pi/2; OTHER USEFUL FUNCTIONS (CHROMA2001);  	f7	constant 1;   	f8	constant 0;   	f9	ascending line (0->1) for reading into a table;   	f10	simple triangle (0-1-0) for default envelopes;-----------------------------------------------------------------------------;-----------------------------------------------------------------------------; KONTROL KEYWORDS FOR OMCHROMA2002 (CTL1);  GLOBAL KEYWORDS:;	ACTION-TIME	: start time of the whole event (0.0);	DURTOT		: total duration of the event (longer components are;                    		automatically clipped) (1.0);	AMPTOT		: amplitude scaler (1.0);	NUMROWS		: amount of rows (components) in the event (1);-----------------------------------------------------------------------------;  LOCAL KEYWORDS:;  GENERAL;   E-DELS	:	entry delays [sec] (0.0);	DURS	:	duration [0-1, scaler of DURTOT] (1.0);  AMPLITUDE;	AMP	:	amplitude [0-1000, scaler of AMPTOT] (500.0);	JTA	:	jitter amplitude [0-1, % of ampl + compensation] (0.0);	TRA	:	tremolo amplitude [0-1, % of amp] (0.0);	TRF	:	tremolo frequency [Hz] (5.0);	ATK	:	attack time [sec] (0.01);	DEC	:	decay time [sec] (0.05);	AEV	:	amplitude envelope [GEN] (10);	BAL	:	panpot [0=left, 1=right] (STEREO VERSION ONLY) (0.5);  FORMANT FREQUENCY;	FREQ	:	formant frequency [Hz] (500.0);	FQA	:	frequency deviation starting at FQ [Hz] (500.0);	FQEV	:	function number for frequency deviation [GEN] (7);	FQJT	:	jitter amplitude [0-1 * FQ] (0.0);	FQJEV	:	function number for jitter [GEN] (7);	FQNA	:	noise amplitude [0-1 * FQ] (0.0);	FQNEV	:	function number for noise [GEN] (7);  BANDWIDTH;	BW	:	bandwidth [Hz] (50.0);	BWA	:	frequency deviation starting at BW [Hz] (100.0);	BWJT	:	jitter amplitude [0-1 * BW (0.0);	BWEV	:	function number for bandwidth [GEN] (7);  OTHER CONTROLS;	NUM	:	number of serially cascading filters (4);	NF	:	frequency of noise on formant frequency (754.1);-----------------------------------------------------------------------------;  SUB-COMPONENTS;	NPART	:	number of sub-components (0);	STON	:	aleatoric frequency distribution for each sub-component (0.0);				POSITIVE = distribution is linear;				NEGATIVE = distribution is logarithmic;	ED2	:	entry delay of each sub-compoment [sec] (0.01);				   (cumulative effect);	DUR2	:	duration of each sub-component [0-1, nil = use the duration;				  of the main component] (1.0);	AMP2	:	amplitude of each sub-component [0-1, nil = use the amplitude;				  of the main component] (1.0);************************************************************************   "   )  (:icon 633)  );******************************************************************;			SUB-CLASSES;******************************************************************; fltn1m;------------------------------------------------------------------(defclass! fltn1m  (fltn1m-root)  (   ; GLOBAL SLOTS: THE METHOD BELOW TRANSFORMS THEM INTO GLOBAL SLOTS   ;    ATTENTION: A GLOBAL SLOT SHOULD NOT HAVE AN INITARG   ( durtot :type number            :initform 1.0            :accessor durtot)   ( amptot :type number            :initform 1.0            :accessor amptot)   ( npart :type number           :initarg :npart            :initform 0           :accessor npart)   ( ston :type number          :initarg :ston          :initform 0.06          :accessor ston)   ( ed2 :type number         :initarg :ed2         :initform 0.01         :accessor ed2)   ( dur2 :type number          :initarg :dur2          :initform -1          :accessor dur2)   ( amp2 :type number          :initarg :amp2          :initform -1          :accessor amp2))  (:documentation      "Extension of the instrument FLTn1m, class fltn1m-root.Added global slots:  durtot [sec] = total duration of the whole event  amptot [0-1] = global amplitude scalerAdded local slots:  npart [int] = number of sub-components  ston [0-1]  = maximum frequency deviation for the sub-components		positive = linear distribution (value in %)		negative = logarithmic distribution (value in semitones)  ed2 [sec]   = entry delay of each sub-component (cumulative effect)   dur2 [0-1]  = duration of each sub-component (scaler of DURTOT) (nil)                   (if nil, use the value of the main component)  amp2 [0-1]  = amplitude of each sub-component (scaler of AMPTOT) (nil)                   (if nil, use the value of the main component)")  (:icon 633)  );------------------------------------------------------------------;	METHODS FOR THIS CLASS;------------------------------------------------------------------; ADD SOME GLOBAL SLOTS (THE FIRST ONES ON THE LEFT OF A CLASS BOX);     THIS METHOD MUST BE DEFINED FOR THIS CLASS(defmethod get-slot-in-out-names ((self fltn1m)); MEANING OF THE FIELDS:;   SLOT NAMES (THE FIRST 3 ARE THE DEFAULT ONES);   DEFAULT VALUES;   DOCUMENTATION;   T IF IT IS A MENU   (values '("self" "numrows" "action-time" "user-fun" "durtot" "amptot")           '(nil 1 0 nil 1.0 1.0)           '("object or object list"             "How many vertical components for init ?"             "local event offset (in seconds)"             "user-defined function"             "Total duration for the whole event [sec]"             "Global amplitude scaler [0-1]")           '(nil nil nil nil nil nil))); SPECIFY WHICH ARE THE GLOBAL SLOTS(defmethod fixed-slots-list ((x om::fltn1m))  "Specifies the fixed (global) slots for this class"  '(numrows action-time user-fun durtot amptot)); ELIMINATE THE LAST 5 SLOTS IN THE INSTRUMENT (NOT NEEDED IN THE SCORE)(defmethod nullslots ((x om::fltn1m))  "Eliminate the last 5 slots from the score"  5);------------------------------------------------------------------(defmethod! orc-header ((self fltn1m-root))  (list   "; Marco's GEN functions *********************************************************"   "; FREQUENCY VIBRATO"   "f2  0   4097   9  1  1  0"   "; AMPLITUDE VIBRATO"   "f3  0   4097   9  1  1  0"   ))(defmethod! orc-header ((self fltn1m))  (list   "; Marco's GEN functions *********************************************************"   "; FREQUENCY VIBRATO"   "f2  0   4097   9  1  1  0"   "; AMPLITUDE VIBRATO"   "f3  0   4097   9  1  1  0"   ));******************************************************************cr::MSorc